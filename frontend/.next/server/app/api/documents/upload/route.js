"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/documents/upload/route";
exports.ids = ["app/api/documents/upload/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:stream/web");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdocuments%2Fupload%2Froute&page=%2Fapi%2Fdocuments%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdocuments%2Fupload%2Froute.ts&appDir=%2FUsers%2Flokesh%2FDocuments%2FAgent_Army%2FEstimator_AI_agent%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flokesh%2FDocuments%2FAgent_Army%2FEstimator_AI_agent%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdocuments%2Fupload%2Froute&page=%2Fapi%2Fdocuments%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdocuments%2Fupload%2Froute.ts&appDir=%2FUsers%2Flokesh%2FDocuments%2FAgent_Army%2FEstimator_AI_agent%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flokesh%2FDocuments%2FAgent_Army%2FEstimator_AI_agent%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_lokesh_Documents_Agent_Army_Estimator_AI_agent_frontend_app_api_documents_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/documents/upload/route.ts */ \"(rsc)/./app/api/documents/upload/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/documents/upload/route\",\n        pathname: \"/api/documents/upload\",\n        filename: \"route\",\n        bundlePath: \"app/api/documents/upload/route\"\n    },\n    resolvedPagePath: \"/Users/lokesh/Documents/Agent_Army/Estimator_AI_agent/frontend/app/api/documents/upload/route.ts\",\n    nextConfigOutput,\n    userland: _Users_lokesh_Documents_Agent_Army_Estimator_AI_agent_frontend_app_api_documents_upload_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/documents/upload/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZkb2N1bWVudHMlMkZ1cGxvYWQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmRvY3VtZW50cyUyRnVwbG9hZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmRvY3VtZW50cyUyRnVwbG9hZCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmxva2VzaCUyRkRvY3VtZW50cyUyRkFnZW50X0FybXklMkZFc3RpbWF0b3JfQUlfYWdlbnQlMkZmcm9udGVuZCUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZsb2tlc2glMkZEb2N1bWVudHMlMkZBZ2VudF9Bcm15JTJGRXN0aW1hdG9yX0FJX2FnZW50JTJGZnJvbnRlbmQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ2dEO0FBQzdIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZXN0aW1hdG9yLWFpLz80MTExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9sb2tlc2gvRG9jdW1lbnRzL0FnZW50X0FybXkvRXN0aW1hdG9yX0FJX2FnZW50L2Zyb250ZW5kL2FwcC9hcGkvZG9jdW1lbnRzL3VwbG9hZC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZG9jdW1lbnRzL3VwbG9hZC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2RvY3VtZW50cy91cGxvYWRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2RvY3VtZW50cy91cGxvYWQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvbG9rZXNoL0RvY3VtZW50cy9BZ2VudF9Bcm15L0VzdGltYXRvcl9BSV9hZ2VudC9mcm9udGVuZC9hcHAvYXBpL2RvY3VtZW50cy91cGxvYWQvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2RvY3VtZW50cy91cGxvYWQvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdocuments%2Fupload%2Froute&page=%2Fapi%2Fdocuments%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdocuments%2Fupload%2Froute.ts&appDir=%2FUsers%2Flokesh%2FDocuments%2FAgent_Army%2FEstimator_AI_agent%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flokesh%2FDocuments%2FAgent_Army%2FEstimator_AI_agent%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/documents/upload/route.ts":
/*!*******************************************!*\
  !*** ./app/api/documents/upload/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n// Debug logging for environment variables\nconsole.log(\"API Route Environment Check:\", {\n    hasOpenAIKey: !!process.env.OPENAI_API_KEY,\n    openAIKeyLength: process.env.OPENAI_API_KEY?.length || 0,\n    openAIKeyPrefix: process.env.OPENAI_API_KEY?.substring(0, 7)\n});\n// Initialize OpenAI with error handling\nlet openai;\ntry {\n    if (!process.env.OPENAI_API_KEY) {\n        throw new Error(\"OPENAI_API_KEY is not set in environment variables\");\n    }\n    openai = new openai__WEBPACK_IMPORTED_MODULE_4__.OpenAI({\n        apiKey: process.env.OPENAI_API_KEY\n    });\n} catch (error) {\n    console.error(\"Error initializing OpenAI:\", error);\n    throw error;\n}\nconst MAX_IMAGE_SIZE = 20 * 1024 * 1024; // 20MB\nconst SUPPORTED_IMAGE_TYPES = [\n    \"image/png\",\n    \"image/jpeg\",\n    \"image/jpg\"\n];\nconst SUPPORTED_TEXT_TYPES = [\n    \"application/pdf\",\n    \"application/msword\",\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    \"text/plain\"\n];\nasync function POST(request) {\n    try {\n        console.log(\"Starting document upload process...\");\n        const formData = await request.formData();\n        const file = formData.get(\"file\");\n        if (!file) {\n            console.error(\"No file provided in request\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"No file provided\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"File received:\", {\n            name: file.name,\n            type: file.type,\n            size: file.size\n        });\n        // Ensure upload directory exists\n        const uploadDir = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(process.cwd(), \"uploads\");\n        console.log(\"Upload directory path:\", uploadDir);\n        try {\n            if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(uploadDir)) {\n                console.log(\"Creating upload directory...\");\n                await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.mkdir)(uploadDir, {\n                    recursive: true\n                });\n            }\n        } catch (dirError) {\n            console.error(\"Error creating upload directory:\", dirError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to create upload directory\",\n                details: dirError instanceof Error ? dirError.message : \"Unknown error\"\n            }, {\n                status: 500\n            });\n        }\n        // Save the file temporarily\n        let buffer;\n        try {\n            const bytes = await file.arrayBuffer();\n            buffer = Buffer.from(bytes);\n            const filePath = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(uploadDir, file.name);\n            console.log(\"Saving file to:\", filePath);\n            await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.writeFile)(filePath, buffer);\n        } catch (fileError) {\n            console.error(\"Error saving file:\", fileError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to save file\",\n                details: fileError instanceof Error ? fileError.message : \"Unknown error\"\n            }, {\n                status: 500\n            });\n        }\n        // Detect file type\n        const isImage = file.type.startsWith(\"image/\");\n        const isText = SUPPORTED_TEXT_TYPES.includes(file.type);\n        console.log(\"File type detection:\", {\n            isImage,\n            isText,\n            fileType: file.type\n        });\n        // File type/size checks\n        if (isImage) {\n            if (!SUPPORTED_IMAGE_TYPES.includes(file.type)) {\n                console.error(\"Unsupported image type:\", file.type);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: `Unsupported image type: ${file.type}`\n                }, {\n                    status: 400\n                });\n            }\n            if (buffer.length > MAX_IMAGE_SIZE) {\n                console.error(\"File too large:\", buffer.length);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Image file too large. Max 20MB allowed.\"\n                }, {\n                    status: 400\n                });\n            }\n        } else if (!isText) {\n            console.error(\"Unsupported file type:\", file.type);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: `Unsupported file type: ${file.type}`\n            }, {\n                status: 400\n            });\n        }\n        let completion;\n        console.log(\"Processing with OpenAI...\");\n        try {\n            if (isImage) {\n                // For images, use vision model\n                const base64 = buffer.toString(\"base64\");\n                const dataUrl = `data:${file.type};base64,${base64}`;\n                console.log(\"Using GPT-4 Vision for image analysis\");\n                completion = await openai.chat.completions.create({\n                    model: process.env.OPENAI_MODEL || \"gpt-4o-mini\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: \"You are a document analysis expert. Extract all text from the image and summarize the project requirements. Return the analysis in a structured format.\"\n                        },\n                        {\n                            role: \"user\",\n                            content: [\n                                {\n                                    type: \"text\",\n                                    text: \"Please extract and analyze this document image.\"\n                                },\n                                {\n                                    type: \"image_url\",\n                                    image_url: {\n                                        url: dataUrl\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    max_tokens: 4096\n                });\n            } else {\n                // For text-based files, use standard GPT-4\n                const fileContent = buffer.toString(\"utf-8\");\n                console.log(\"Using GPT-4 Turbo for text analysis\");\n                completion = await openai.chat.completions.create({\n                    model: process.env.OPENAI_MODEL || \"gpt-4o-mini\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: \"You are a document analysis expert. Analyze the following document and extract key information about the project, including building specifications, requirements, and any relevant technical details. Return the analysis in a structured JSON format.\"\n                        },\n                        {\n                            role: \"user\",\n                            content: fileContent\n                        }\n                    ],\n                    response_format: {\n                        type: \"json_object\"\n                    }\n                });\n            }\n        } catch (aiError) {\n            console.error(\"OpenAI API Error:\", {\n                error: aiError,\n                message: aiError?.message,\n                response: aiError?.response?.data\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to process with OpenAI\",\n                details: aiError?.message || \"Unknown error\",\n                openaiError: aiError?.response?.data\n            }, {\n                status: 500\n            });\n        }\n        console.log(\"OpenAI processing completed\");\n        const content = completion.choices[0].message.content;\n        if (!content) {\n            console.error(\"No content received from OpenAI\");\n            throw new Error(\"No content received from OpenAI\");\n        }\n        let analysis;\n        try {\n            // For text documents, the response is already JSON\n            // For images, we need to parse any structured data from the text response\n            analysis = isImage ? {\n                extractedText: content\n            } : JSON.parse(content);\n            console.log(\"Analysis parsed successfully\");\n        } catch (parseError) {\n            console.error(\"Error parsing OpenAI response:\", parseError);\n            analysis = {\n                rawContent: content\n            };\n        }\n        console.log(\"Sending successful response\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            documentType: file.type,\n            extractedData: analysis,\n            confidence: 0.95,\n            url: isImage ? `data:${file.type};base64,${buffer.toString(\"base64\")}` : undefined\n        });\n    } catch (error) {\n        console.error(\"Unhandled error in document processing:\", {\n            error,\n            message: error?.message,\n            stack: error?.stack\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to process document\",\n            details: error?.message || \"Unknown error\",\n            stack:  true ? error?.stack : 0\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/documents/upload/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/formdata-node","vendor-chunks/openai","vendor-chunks/next","vendor-chunks/form-data-encoder","vendor-chunks/whatwg-url","vendor-chunks/agentkeepalive","vendor-chunks/tr46","vendor-chunks/web-streams-polyfill","vendor-chunks/node-fetch","vendor-chunks/webidl-conversions","vendor-chunks/ms","vendor-chunks/humanize-ms","vendor-chunks/event-target-shim","vendor-chunks/abort-controller"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdocuments%2Fupload%2Froute&page=%2Fapi%2Fdocuments%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdocuments%2Fupload%2Froute.ts&appDir=%2FUsers%2Flokesh%2FDocuments%2FAgent_Army%2FEstimator_AI_agent%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flokesh%2FDocuments%2FAgent_Army%2FEstimator_AI_agent%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();