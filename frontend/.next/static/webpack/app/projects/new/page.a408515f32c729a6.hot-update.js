"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/projects/new/page",{

/***/ "(app-pages-browser)/./hooks/useProjectSession.ts":
/*!************************************!*\
  !*** ./hooks/useProjectSession.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useProjectSession: function() { return /* binding */ useProjectSession; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst useProjectSession = ()=>{\n    const [sessionId, setSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [projectData, setProjectData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [currentStep, setCurrentStep] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);\n    const [completedSteps, setCompletedSteps] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const autoSaveTimeout = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const createSession = async function() {\n        let initialData = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\"/api/project-session\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    projectData: initialData,\n                    currentStep: 1,\n                    completedSteps: []\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Failed to create session\");\n            }\n            const { sessionId } = await response.json();\n            setSessionId(sessionId);\n            setProjectData(initialData);\n            setCurrentStep(1);\n            setCompletedSteps([]);\n            // Store session ID in localStorage\n            localStorage.setItem(\"projectSessionId\", sessionId);\n            return sessionId;\n        } catch (error) {\n            console.error(\"Error creating session:\", error);\n            setError(error.message);\n            throw error;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const updateSession = async (data, step)=>{\n        if (!sessionId) return;\n        setLoading(true);\n        setError(null);\n        try {\n            const updatedData = {\n                ...projectData,\n                ...data\n            };\n            setProjectData(updatedData);\n            const response = await fetch(\"/api/project-session\", {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    sessionId,\n                    projectData: updatedData,\n                    currentStep: step || currentStep,\n                    completedSteps: step ? [\n                        ...completedSteps,\n                        step\n                    ] : completedSteps\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Failed to update session\");\n            }\n            if (step) {\n                setCurrentStep(step);\n                setCompletedSteps((prev)=>Array.from(new Set([\n                        ...prev,\n                        step\n                    ])));\n            }\n        } catch (error) {\n            console.error(\"Error updating session:\", error);\n            setError(error.message);\n            throw error;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const loadSession = async (id)=>{\n        setLoading(true);\n        setError(null);\n        try {\n            var _session_projectData;\n            console.log(\"Loading session with ID:\", id);\n            const response = await fetch(\"/api/project-session/\".concat(id));\n            if (!response.ok) {\n                if (response.status === 404) {\n                    // Session not found, create new one\n                    console.log(\"Session not found, creating new session\");\n                    localStorage.removeItem(\"projectSessionId\");\n                    await createSession();\n                    return;\n                } else if (response.status === 410) {\n                    // Session expired, create new one\n                    console.log(\"Session expired, creating new session\");\n                    localStorage.removeItem(\"projectSessionId\");\n                    await createSession();\n                    return;\n                }\n                throw new Error(\"Failed to load session: \".concat(response.status, \" \").concat(response.statusText));\n            }\n            const session = await response.json();\n            console.log(\"Loaded session data:\", session);\n            console.log(\"Session projectData:\", session.projectData);\n            console.log(\"Session uploadedFiles:\", (_session_projectData = session.projectData) === null || _session_projectData === void 0 ? void 0 : _session_projectData.uploadedFiles);\n            setSessionId(session.sessionId);\n            setProjectData(session.projectData);\n            setCurrentStep(session.currentStep);\n            setCompletedSteps(session.completedSteps);\n        } catch (error) {\n            console.error(\"Error loading session:\", error);\n            setError(error.message);\n            // Fallback to new session\n            localStorage.removeItem(\"projectSessionId\");\n            await createSession();\n        } finally{\n            setLoading(false);\n        }\n    };\n    const clearSession = async ()=>{\n        if (sessionId) {\n            try {\n                await fetch(\"/api/project-session/\".concat(sessionId), {\n                    method: \"DELETE\"\n                });\n            } catch (error) {\n                console.error(\"Error clearing session:\", error);\n            }\n            localStorage.removeItem(\"projectSessionId\");\n            setSessionId(null);\n            setProjectData(null);\n            setCurrentStep(1);\n            setCompletedSteps([]);\n            setError(null);\n        }\n    };\n    const autoSave = (data)=>{\n        // Clear existing timeout\n        if (autoSaveTimeout.current) {\n            clearTimeout(autoSaveTimeout.current);\n        }\n        // Set new timeout for auto-save\n        autoSaveTimeout.current = setTimeout(()=>{\n            if (sessionId && data) {\n                updateSession(data, currentStep).catch(console.error);\n            }\n        }, 1000); // 1 second delay\n    };\n    // Cleanup timeout on unmount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        return ()=>{\n            if (autoSaveTimeout.current) {\n                clearTimeout(autoSaveTimeout.current);\n            }\n        };\n    }, []);\n    return {\n        sessionId,\n        projectData,\n        currentStep,\n        completedSteps,\n        loading,\n        error,\n        createSession,\n        updateSession,\n        loadSession,\n        clearSession,\n        autoSave,\n        setCurrentStep,\n        setProjectData\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useProjectSession.ts\n"));

/***/ })

});